{"version":3,"file":"static/js/409.75dfc220.chunk.js","mappings":"iNAGaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,iIAUVE,EAAOF,EAAAA,EAAAA,GAAH,+C,SCQjB,EAjBmB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GACV,OACE,SAACL,EAAD,WACE,SAACH,EAAD,CAAYS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAtD,SACGG,EAAMK,OAASL,EAAMM,QAFfN,EAAME,GAMpB,KAGN,C,oJCjBYK,EAAOd,EAAAA,EAAAA,KAAH,0CAIJe,EAAQf,EAAAA,EAAAA,MAAH,6DAKLgB,EAAShB,EAAAA,EAAAA,OAAH,iJ,SC0BnB,EAjCmB,SAAC,GAAkB,IAAhBiB,EAAe,EAAfA,SACpB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAcA,OACE,UAACN,EAAD,CAAMG,SAba,SAAAI,GACnBA,EAAEC,iBACF,IAAMC,EAAqBF,EAAEG,cAAcC,KAAKC,MAAMC,cAAcC,OAEzC,KAAvBL,EACFM,MAAM,mDAENZ,EAASM,GAEXH,EAAe,GAChB,EAGC,WACE,SAACL,EAAD,CACEe,SAAU,SAAAT,GACRD,EAAeC,EAAEG,cAAcE,MAChC,EACDA,MAAOP,EACPY,KAAK,OACLlB,KAAK,OACLmB,aAAa,MACbC,WAAS,EACTC,YAAY,kBAEd,SAAClB,EAAD,CAAQe,KAAK,SAAb,sBAGL,ECCD,EA5Be,WAAO,IAAD,EACnB,GAA4Cb,EAAAA,EAAAA,UAAS,IAArD,eAAOiB,EAAP,KAAuBC,EAAvB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KAEMpB,EAAW,UAAGmB,EAAaE,IAAI,gBAApB,QAAgC,GAgBjD,OAVAC,EAAAA,EAAAA,YAAU,WACY,KAAhBtB,IAEJuB,EAAAA,EAAAA,IAAavB,GACVwB,MAAK,SAAAC,GACJR,GAAkB,OAAIQ,EAAKC,SAC5B,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAAC5B,KAGF,gCACE,SAAC,EAAD,CAAYF,SAhBS,SAAAiC,GACvBX,EAAgB,CAAEW,MAAAA,GACnB,IAeI/B,IAAe,SAACgC,EAAA,EAAD,CAAYhD,OAAQgC,MAGzC,C","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  font-weight: 400;\n\n  &:hover {\n    color: #5a93ca;\n  }\n`;\n\nexport const List = styled.li`\n  margin-bottom: 6px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { StyledLink, List } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => {\n        return (\n          <List key={movie.id}>\n            <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title || movie.name}\n            </StyledLink>\n          </List>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      name: PropTypes.string,\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  padding: 16px;\n`;\n\nexport const Input = styled.input`\n  height: 33px;\n  font-size: 16px;\n`;\n\nexport const Submit = styled.button`\n  height: 38px;\n  font-size: 16px;\n  color: white;\n  background-color: #5a93ca;\n  border: none;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Submit } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const currentSearchQuery = e.currentTarget.text.value.toLowerCase().trim();\n\n    if (currentSearchQuery === '') {\n      alert('Enter the name of the movie in the search field');\n    } else {\n      onSubmit(currentSearchQuery);\n    }\n    setSearchQuery('');\n  };\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Input\n        onChange={e => {\n          setSearchQuery(e.currentTarget.value);\n        }}\n        value={searchQuery}\n        type=\"text\"\n        name=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie\"\n      ></Input>\n      <Submit type=\"submit\">Search</Submit>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { searchMovies } from '../../services/getFilmsAPI';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n\n  const searchQuery = searchParams.get('query') ?? '';\n\n  const handleFormSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  useEffect(() => {\n    if (searchQuery === '') return;\n\n    searchMovies(searchQuery)\n      .then(data => {\n        setSearchedMovies([...data.results]);\n      })\n      .catch(error => console.log(error));\n  }, [searchQuery]);\n\n  return (\n    <section>\n      <SearchForm onSubmit={handleFormSubmit} />\n      {searchQuery && <MoviesList movies={searchedMovies} />}\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["StyledLink","styled","Link","List","movies","location","useLocation","map","movie","to","id","state","from","title","name","Form","Input","Submit","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","currentSearchQuery","currentTarget","text","value","toLowerCase","trim","alert","onChange","type","autoComplete","autoFocus","placeholder","searchedMovies","setSearchedMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","searchMovies","then","data","results","catch","error","console","log","query","MoviesList"],"sourceRoot":""}